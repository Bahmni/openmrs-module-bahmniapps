name: Build and Publish
on:
  push:
    branches: [master, BAH-1678]
    paths-ignore:
      - "**.md"
  repository_dispatch:
    types: ["default-config-trigger"]

env:
  BAHMNI_VERSION: 0.94

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Version Output
        id: get-version
        run: |
          VERSION=$(cat package/.baseversion)
          if [ $(git tag -l "$VERSION") ]; then 
            echo "Version $VERSION already released. Please update your version in package/.baseversion"
            exit 1
          else
            echo "Setting version $VERSION"
            echo ::set-output name=version::$VERSION
          fi

  docker-build-publish:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      ARTIFACT_VERSION: ${{ needs.get-version.outputs.version }}-${{github.run_number}}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 10.16.3
        uses: actions/setup-node@v1
        with:
          node-version: 10.16.3
      - name: Use Ruby 2.5
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5
      - run: npm install -g bower
      - run: npm install -g grunt-cli
      - run: gem install compass
      - run: npm install --global yarn
      - name: Package
        run: cd ui && yarn cache clean && /bin/bash ./scripts/package.sh
      - name: Download default_config.zip
        run: sh .github/download_artifact.sh default-config default_config ${{secrets.BAHMNI_PAT}}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: package/docker/Dockerfile
          push: true
          tags: bahmni/bahmni-web:${{ env.ARTIFACT_VERSION }},bahmni/bahmni-web:latest

  helm-package-publish:
    name: Helm Package & Publish
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      ARTIFACT_VERSION: ${{ needs.get-version.outputs.version }}-${{github.run_number}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: openmrs-module-bahmniapps
        - name: Update Version and Image Tag
          run: |
          yq --inplace '.image.tag = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/values.yaml
          yq --inplace '.version = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/Chart.yaml

        - name: Helm Lint
          run: helm lint $HELM_CHART_PATH

        - name: Helm Package
          run: helm package $HELM_CHART_PATH

        - name: Checkout Charts Repository
          uses: actions/checkout@v2
          with:
            repository: Bahmni/helm-charts
            ref: gh-pages
            path: helm-charts
            persist-credentials: false

        - name: Copy Helm Archive
          run: cp bahmni-web-${{ env.ARTIFACT_VERSION }}.tgz helm-charts/bahmni-web/

        - name: Helm Index
          working-directory: helm-charts/
          run: helm repo index --merge index.yaml --url https://bahmni.github.io/helm-charts/  .

        - name: Commit and Push Chart Repository
          working-directory: helm-charts/
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Release of bahmni-web-${{ env.ARTIFACT_VERSION }}"
            git push 'https://${{ secrets.BAHMNI_PAT_USERNAME}}:${{ secrets.BAHMNI_PAT}}@github.com/bahmni/helm-charts.git' gh-pages
